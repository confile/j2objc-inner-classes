//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:libSrc/json-20140107-sources.jar!org/json/JSONException.java
//


#include "J2ObjC_source.h"
#include "JSONException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"

@class JavaLangThrowable;

#define OrgJsonJSONException_serialVersionUID 0LL

@interface OrgJsonJSONException () {
 @public
  JavaLangThrowable *cause_;
}
@end

J2OBJC_FIELD_SETTER(OrgJsonJSONException, cause_, JavaLangThrowable *)

J2OBJC_STATIC_FIELD_GETTER(OrgJsonJSONException, serialVersionUID, jlong)

@implementation OrgJsonJSONException

- (instancetype)initWithNSString:(NSString *)message {
  OrgJsonJSONException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgJsonJSONException_initWithJavaLangThrowable_(self, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  return self->cause_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JSONException", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangThrowable:", "JSONException", NULL, 0x1, NULL, NULL },
    { "getCause", NULL, "Ljava.lang.Throwable;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJsonJSONException_serialVersionUID },
    { "cause_", NULL, 0x2, "Ljava.lang.Throwable;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgJsonJSONException = { 2, "JSONException", "org.json", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJsonJSONException;
}

@end

void OrgJsonJSONException_initWithNSString_(OrgJsonJSONException *self, NSString *message) {
  (void) JavaLangRuntimeException_initWithNSString_(self, message);
}

OrgJsonJSONException *new_OrgJsonJSONException_initWithNSString_(NSString *message) {
  OrgJsonJSONException *self = [OrgJsonJSONException alloc];
  OrgJsonJSONException_initWithNSString_(self, message);
  return self;
}

void OrgJsonJSONException_initWithJavaLangThrowable_(OrgJsonJSONException *self, JavaLangThrowable *cause) {
  (void) JavaLangRuntimeException_initWithNSString_(self, [((JavaLangThrowable *) nil_chk(cause)) getMessage]);
  self->cause_ = cause;
}

OrgJsonJSONException *new_OrgJsonJSONException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  OrgJsonJSONException *self = [OrgJsonJSONException alloc];
  OrgJsonJSONException_initWithJavaLangThrowable_(self, cause);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsonJSONException)
